// Generated by nitro
declare module 'nitropack' {
  type Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T
  interface InternalApi {
    '/api/xuyen-khong': Awaited<ReturnType<typeof import('../../server/api/xuyen-khong').default>>
    '/api/top-week': Awaited<ReturnType<typeof import('../../server/api/top-week').default>>
    '/api/top-month': Awaited<ReturnType<typeof import('../../server/api/top-month').default>>
    '/api/top-day': Awaited<ReturnType<typeof import('../../server/api/top-day').default>>
    '/api/top-all': Awaited<ReturnType<typeof import('../../server/api/top-all').default>>
    '/api/spotlights': Awaited<ReturnType<typeof import('../../server/api/spotlights').default>>
    '/api/search': Awaited<ReturnType<typeof import('../../server/api/search').default>>
    '/api/search-manga': Awaited<ReturnType<typeof import('../../server/api/search-manga').default>>
    '/api/recommend-story': Awaited<ReturnType<typeof import('../../server/api/recommend-story').default>>
    '/api/proxy': Awaited<ReturnType<typeof import('../../server/api/proxy').default>>
    '/api/ngon-tinh': Awaited<ReturnType<typeof import('../../server/api/ngon-tinh').default>>
    '/api/manga-updated': Awaited<ReturnType<typeof import('../../server/api/manga-updated').default>>
    '/api/manga-new': Awaited<ReturnType<typeof import('../../server/api/manga-new').default>>
    '/api/follow-story': Awaited<ReturnType<typeof import('../../server/api/follow-story').default>>
    '/api/filter': Awaited<ReturnType<typeof import('../../server/api/filter').default>>
    '/api/dam-my': Awaited<ReturnType<typeof import('../../server/api/dam-my').default>>
    '/api/comic': Awaited<ReturnType<typeof import('../../server/api/comic').default>>
    '/api/chapters': Awaited<ReturnType<typeof import('../../server/api/chapters').default>>
    '/__nuxt_error': Awaited<ReturnType<typeof import('../../node_modules/nuxt/dist/core/runtime/nitro/renderer').default>>
  }
}
declare global {
  const appendHeader: typeof import('h3')['appendHeader']
  const assertMethod: typeof import('h3')['assertMethod']
  const cachedEventHandler: typeof import('#internal/nitro')['cachedEventHandler']
  const cachedFunction: typeof import('#internal/nitro')['cachedFunction']
  const createError: typeof import('h3')['createError']
  const defineCachedEventHandler: typeof import('#internal/nitro')['defineCachedEventHandler']
  const defineCachedFunction: typeof import('#internal/nitro')['defineCachedFunction']
  const defineEventHandler: typeof import('h3')['defineEventHandler']
  const defineLazyEventHandler: typeof import('h3')['defineLazyEventHandler']
  const defineNitroPlugin: typeof import('#internal/nitro')['defineNitroPlugin']
  const deleteCookie: typeof import('h3')['deleteCookie']
  const dynamicEventHandler: typeof import('h3')['dynamicEventHandler']
  const eventHandler: typeof import('h3')['eventHandler']
  const handleCacheHeaders: typeof import('h3')['handleCacheHeaders']
  const isMethod: typeof import('h3')['isMethod']
  const lazyEventHandler: typeof import('h3')['lazyEventHandler']
  const nitroPlugin: typeof import('#internal/nitro')['nitroPlugin']
  const sendRedirect: typeof import('h3')['sendRedirect']
  const setCookie: typeof import('h3')['setCookie']
  const useBody: typeof import('h3')['useBody']
  const useCookie: typeof import('h3')['useCookie']
  const useCookies: typeof import('h3')['useCookies']
  const useMethod: typeof import('h3')['useMethod']
  const useNitroApp: typeof import('#internal/nitro')['useNitroApp']
  const useQuery: typeof import('h3')['useQuery']
  const useRawBody: typeof import('h3')['useRawBody']
  const useRuntimeConfig: typeof import('#internal/nitro')['useRuntimeConfig']
  const useStorage: typeof import('#internal/nitro')['useStorage']
}
export {}