import type { ImageSizes } from '../../types';
import { imageMixin } from './image.mixin';
declare type NAttrs = typeof imageMixin['nImgAttrs'] & {
    sizes?: string;
    srcset?: string;
};
declare const _default: import("vue").DefineComponent<{
    placeholder: {
        type: (BooleanConstructor | StringConstructor | NumberConstructor | ArrayConstructor)[];
        default: any;
    };
}, unknown, {
    placeholderLoaded: boolean;
}, {
    nAttrs(): NAttrs;
    nMainSrc(): string;
    nSizes(): ImageSizes;
    nSrc(): string;
    nPlaceholder(): any;
}, {}, import("vue").ComponentOptions<{}, any, any, any, any, any, any, any>, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    placeholder: {
        type: (BooleanConstructor | StringConstructor | NumberConstructor | ArrayConstructor)[];
        default: any;
    };
}>>, {
    placeholder: string | number | boolean | unknown[];
}>;
export default _default;
